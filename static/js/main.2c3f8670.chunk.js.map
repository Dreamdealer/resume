{"version":3,"sources":["Tetris/Config/tetrisConfig.ts","Tetris/Components/Cell.tsx","Tetris/Components/Instructions.tsx","Tetris/Components/Stage.tsx","Tetris/gameHelpers.ts","Tetris/Config/tetrominos.ts","Tetris/Hooks/usePlayer.ts","Tetris/Hooks/useStage.ts","Tetris/Hooks/useInterval.ts","Tetris/Components/Display.tsx","Tetris/Components/Button.tsx","Tetris/Components/Box.tsx","Tetris/Components/Styles.ts","Tetris/Components/Textfield.tsx","Tetris/Components/GameOver.tsx","Tetris/Components/OnScreenControls.tsx","Tetris/Components/FancyRadios.tsx","Tetris/Components/Label.tsx","Tetris/Components/Settings.tsx","Tetris/Assets/slider.svg","Tetris/Themes/LightTheme.ts","Tetris/Themes/DarkTheme.ts","Tetris/Components/SingleTetromino.tsx","Tetris/Components/Highscores.tsx","Tetris/Tetris.tsx","Tetris/Hooks/useGameStatus.ts","Homepage/styles.ts","Homepage/Navigation.tsx","Homepage/Assets/slider.svg","Homepage/Settings.tsx","Homepage/Home.tsx","Homepage/Homepage.tsx","index.tsx"],"names":["tetrisConfig","width","height","size","spacing","StyledCube","styled","div","transparent","StyledCubeFace","tetrominoType","theme","tetrominos","color","face","handleFaceTransform","Cell","props","StyledInstructions","modal","Instructions","StyledStage","stage","background","showInstructions","lines","main","borderWidth","borderColor","paused","StyledPause","StyledRow","StyledColumnGuide","left","columnWidth","guide","Stage","activeColumns","map","row","rowIndex","index","type","createStage","Array","from","fill","checkCollision","player","moveX","x","moveY","y","tetromino","length","pos","PauseTetromino","TETROMINOS","0","shape","preview","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","playerStartingState","collided","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","setActiveColumns","useEffect","updateStage","prevStage","newStage","cell","offsetArray","indexes","filter","min","max","cells","flat","forEach","value","newY","newX","reduce","accumulator","findIndex","prev","unshift","push","sweepRows","prevState","useInterval","callback","delay","savedCallback","useRef","current","interval","setInterval","clearInterval","Display","buttonsAndDisplays","fontSize","Button","button","Box","margin","join","grow","direction","justifyContent","alignItems","StyledModalContainer","StyledSettingsOverlay","overlay","StyledDisplaysContainer","StyledDisplays","StyledControlsContainer","StyledControl","AppContainer","StyledTetrisContainer","tilt","gameOver","StyledSlider","input","Textfield","tSS","StyledGameOver","GameOver","username","setUsername","score","onChange","event","target","substring","toUpperCase","style","onClick","onSaveHighscore","name","date","Date","now","toString","onClose","OnScreenControls","e","onPushLeft","preventDefault","onPushRotate","onPushDown","onPushRight","StyledFancyRadiosContainer","StyledLabel","label","checked","FancyRadios","options","option","selected","Label","mt","Settings","localSettings","onLocalSettingsChange","parseInt","marginTop","display","onCloseSettings","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","className","d","SvgSlider","_ref","svgRef","title","titleId","xmlns","xmlnsXlink","viewBox","enableBackground","xmlSpace","ref","id","ForwardRef","lightTheme","darkTheme","SingleTetromino","cellIndex","emptyHighscoreEntry","highscores","sort","a","b","slice","populatedHighscores","Tetris","setLocalSettings","dropTime","setDropTime","showSettings","setShowSettings","setGameOver","gamePaused","setGamePaused","gameStarted","setGameStarted","setPlayer","nextTetromino","setNextTetromino","rotate","matrix","rotatedTetromino","_","col","reverse","useCallback","updatePlayerPosition","playerRotate","clonedPlayer","JSON","parse","stringify","offset","usePlayer","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","setHighscores","gameRef","movePlayer","dir","playerMovement","startGame","moveTetrominoDown","canMoveTo","tryToMoveTo","action","localStorageSettings","localStorage","getItem","savedHighscores","settingsObject","setItem","focus","highscore","newHighscores","role","tabIndex","onKeyUp","keyCode","onKeyDown","console","log","move","marginLeft","Highscores","pauseTetrominoShape","backgroundGradients","royal","greenToBlack","netflix","megatron","StyledSwatchContainer","StyledGradientSwatch","gradient","StyledContainer","selectedBackground","StyledButton","dark","StyledNav","nav","StyledLink","Link","disabled","Navigation","to","entries","selectedBackgroundGradient","Home","href","getFullYear","position","bottom","right","Homepage","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c3f8670.chunk.js","sourcesContent":["export const tetrisConfig = {\n    stage: {\n        width: 10,\n        height: 20,\n    },\n    cell: {\n        size: 32,\n        spacing: 0,\n    },\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { tetrisConfig } from '../Config/tetrisConfig';\nimport { TetrominoKeyType } from '../Config/tetrominos';\n\ntype PropsType = {\n    tetrominoType: TetrominoKeyType;\n};\n\nconst handleFaceTransform = (face: string) => {\n    switch (face) {\n        case 'right':\n            return 'rotateY(90deg)';\n        case 'back':\n            return 'rotateY(180deg)';\n        case 'left':\n            return 'rotateY(-90deg)';\n        case 'top':\n            return 'rotateX(90deg)';\n        case 'bottom':\n            return 'rotateX(-90deg)';\n        default:\n        case 'front':\n            return 'rotateY(0deg)';\n    }\n};\n\nexport const StyledCube = styled.div<{ transparent?: boolean }>`\n    width: ${tetrisConfig.cell.size}px;\n    height: ${tetrisConfig.cell.size}px;\n    position: relative;\n    transform-style: preserve-3d;\n    transform: translateX(${tetrisConfig.cell.spacing / 2}px) translateY(${tetrisConfig.cell.spacing / 2}px)\n        translateZ(${tetrisConfig.cell.size}px);\n    transition: transform 1s;\n\n    ${({ transparent }) =>\n        !transparent &&\n        `\n        &::after {\n            content: '';\n            position: absolute;\n            width: ${tetrisConfig.cell.size}px;\n            height: ${tetrisConfig.cell.size}px;\n            background: rgba(0,0,0,.1);\n            box-shadow: 0 0 10px rgba(0,0,0,.1);\n            transform: translateZ(-${tetrisConfig.cell.size}px);\n        }\n    `}\n`;\n\nexport const StyledCubeFace = styled.div<{ face: string; tetrominoType: string }>`\n    position: absolute;\n    width: ${tetrisConfig.cell.size - tetrisConfig.cell.spacing * 2}px;\n    height: ${tetrisConfig.cell.size - tetrisConfig.cell.spacing * 2}px;\n    background: ${({ tetrominoType, theme }) => theme.tetrominos[tetrominoType].color};\n    line-height: ${tetrisConfig.cell.size}px;\n    font-size: 40px;\n    font-weight: bold;\n    color: white;\n    text-align: center;\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1) inset;\n    transform: ${({ face }) =>\n        `${handleFaceTransform(face)} translateZ(${tetrisConfig.cell.size / 2 - tetrisConfig.cell.spacing}px)`};\n`;\n\nconst Cell: FC<PropsType> = props => {\n    if (props.tetrominoType === 0) {\n        return <StyledCube transparent />;\n    }\n\n    return (\n        <StyledCube>\n            <StyledCubeFace face=\"front\" tetrominoType={props.tetrominoType} />\n            <StyledCubeFace face=\"back\" tetrominoType={props.tetrominoType} />\n            <StyledCubeFace face=\"right\" tetrominoType={props.tetrominoType} />\n            <StyledCubeFace face=\"left\" tetrominoType={props.tetrominoType} />\n            <StyledCubeFace face=\"top\" tetrominoType={props.tetrominoType} />\n            <StyledCubeFace face=\"bottom\" tetrominoType={props.tetrominoType} />\n        </StyledCube>\n    );\n};\n\nexport default Cell;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInstructions = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: ${({ theme }) => theme.modal.color};\n    padding: 20px;\n`;\n\nconst Instructions = () => (\n    <StyledInstructions>\n        Keybindings:\n        <br />\n        <br />\n        Up = Rotate tetromino\n        <br />\n        <br />\n        Left = Move tetromino left one cell\n        <br />\n        <br />\n        Right = Move tetromino right one cell\n        <br />\n        <br />\n        Down = Move tetromino down one cell\n        <br />\n        <br />\n        PageDown or End = Move tetromino all the way down\n    </StyledInstructions>\n);\n\nexport default Instructions;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { tetrisConfig } from '../Config/tetrisConfig';\nimport { StageType } from '../gameHelpers';\nimport Cell, { StyledCube } from './Cell';\nimport Instructions from './Instructions';\n\nexport const StyledStage = styled.div<{ showInstructions: boolean; paused: boolean }>`\n    width: ${() => `${tetrisConfig.stage.width * tetrisConfig.cell.size}px`};\n    height: ${() => `${tetrisConfig.stage.height * tetrisConfig.cell.size}px`};\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: flex-end;\n    align-items: flex-end;\n    background: ${({ theme }) => theme.stage.background};\n\n    ${({ showInstructions, theme }) =>\n        !showInstructions &&\n        `\n        background-image: linear-gradient(${theme.stage.lines} 1px, transparent 1px),\n            linear-gradient(90deg, ${theme.stage.lines} 1px, transparent 1px);\n        background-size: ${tetrisConfig.cell.size}px ${tetrisConfig.cell.size}px,\n            ${tetrisConfig.cell.size}px ${tetrisConfig.cell.size}px;\n        background-position: -1px -1px, -1px -1px;\n    `}\n\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.stage.lines} inset;\n    border: ${({ theme }) => theme.main.borderWidth} solid ${({ theme }) => theme.main.borderColor};\n    border-radius: 8px;\n    position: relative;\n\n    ${StyledCube} {\n        box-shadow: none;\n        filter: ${({ paused }) => (paused ? 'blur(15px)' : 'none')};\n    }\n`;\n\nconst StyledPause = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: ${({ theme }) => theme.modal.color};\n    padding: 20px;\n    font-size: 40px;\n`;\n\nconst StyledRow = styled.div`\n    display: flex;\n    height: ${tetrisConfig.cell.size}px;\n    width: 100%;\n`;\n\nconst StyledColumnGuide = styled.div<{ left: number; size: number; columnWidth: number }>`\n    position: absolute;\n    left: ${({ left, columnWidth }) => `${left * columnWidth}px`};\n    width: ${({ size, columnWidth }) => `${size * columnWidth}px`};\n    top: 0;\n    bottom: 0;\n    background: ${({ theme }) => theme.stage.guide};\n`;\n\ntype PropsType = {\n    stage: StageType;\n    paused: boolean;\n    showInstructions: boolean;\n    activeColumns: {\n        left: number;\n        size: number;\n    };\n};\n\nconst Stage: FC<PropsType> = props => {\n    return (\n        <StyledStage showInstructions={props.showInstructions} paused={props.paused}>\n            {props.showInstructions && <Instructions />}\n            {props.paused && <StyledPause>Paused</StyledPause>}\n            {props.activeColumns.size > 0 && (\n                <StyledColumnGuide {...props.activeColumns} columnWidth={tetrisConfig.cell.size} />\n            )}\n            {props.stage.map((row: Array<Array<any>>, rowIndex: number) => (\n                <StyledRow key={rowIndex}>\n                    {row.map(([type], index: number) => {\n                        return <Cell key={rowIndex + index} tetrominoType={type} />;\n                    })}\n                </StyledRow>\n            ))}\n        </StyledStage>\n    );\n};\n\nexport default Stage;\n","import { PlayerStateType } from './Hooks/usePlayer';\nimport { tetrisConfig } from './Config/tetrisConfig';\nimport { TetrominoShapeType } from './Config/tetrominos';\n\nexport type StageCellType = [TetrominoShapeType];\n\nexport type StageType = Array<Array<any>>;\n\nexport const createStage = (): StageType => {\n    const emptyStage = Array.from(Array(tetrisConfig.stage.height), () =>\n        new Array(tetrisConfig.stage.width).fill([0, 'clear']),\n    );\n\n    return emptyStage;\n};\n\nexport const checkCollision = (\n    player: PlayerStateType,\n    stage: StageType,\n    { x: moveX, y: moveY }: { x: number; y: number },\n) => {\n    for (let y = 0; y < player.tetromino.length; y += 1) {\n        for (let x = 0; x < player.tetromino[y].length; x += 1) {\n            // 1. Check that we're on an actual Tetromino cell\n            if (player.tetromino[y][x] !== 0) {\n                if (\n                    // 2. Check that our move is inside the game areas height (y)\n                    // We shouldn't go through the bottom of the play area\n                    !stage[y + player.pos.y + moveY] ||\n                    // 3. Check that our move is inside the game areas width (x)\n                    !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n                    // 4. Check that the cell wer'e moving to isn't set to clear\n                    stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\n                ) {\n                    return true;\n                }\n            }\n        }\n    }\n};\n","export type TetrominoShapeType = Array<Array<string | number>>;\n\nexport type TetrominoKeyType = 0 | 'I' | 'J' | 'L' | 'O' | 'S' | 'T' | 'Z';\n\nexport type TetrominoType = {\n    shape: TetrominoShapeType;\n    preview: TetrominoShapeType;\n};\n\nexport type TetrominosType = {\n    [key in TetrominoKeyType]: TetrominoType;\n};\n\nexport const PauseTetromino: TetrominoShapeType = [\n    ['?', 0, '?'],\n    [0, '?', 0],\n    ['?', 0, '?'],\n];\n\nexport const TETROMINOS: TetrominosType = {\n    0: { shape: [[0]], preview: [[0]] },\n    I: {\n        shape: [\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n        ],\n        preview: [['I'], ['I'], ['I'], ['I']],\n    },\n    J: {\n        shape: [\n            [0, 'J', 0],\n            [0, 'J', 0],\n            ['J', 'J', 0],\n        ],\n        preview: [\n            [0, 'J'],\n            [0, 'J'],\n            ['J', 'J'],\n        ],\n    },\n    L: {\n        shape: [\n            [0, 'L', 0],\n            [0, 'L', 0],\n            [0, 'L', 'L'],\n        ],\n        preview: [\n            ['L', 0],\n            ['L', 0],\n            ['L', 'L'],\n        ],\n    },\n    O: {\n        shape: [\n            ['O', 'O'],\n            ['O', 'O'],\n        ],\n        preview: [\n            ['O', 'O'],\n            ['O', 'O'],\n        ],\n    },\n    S: {\n        shape: [\n            [0, 'S', 'S'],\n            ['S', 'S', 0],\n            [0, 0, 0],\n        ],\n        preview: [\n            [0, 'S', 'S'],\n            ['S', 'S', 0],\n        ],\n    },\n    T: {\n        shape: [\n            [0, 0, 0],\n            ['T', 'T', 'T'],\n            [0, 'T', 0],\n        ],\n        preview: [\n            ['T', 'T', 'T'],\n            [0, 'T', 0],\n        ],\n    },\n    Z: {\n        shape: [\n            ['Z', 'Z', 0],\n            [0, 'Z', 'Z'],\n            [0, 0, 0],\n        ],\n        preview: [\n            ['Z', 'Z', 0],\n            [0, 'Z', 'Z'],\n        ],\n    },\n};\n\nexport const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    return TETROMINOS[randTetromino as keyof TetrominosType];\n};\n","import { useCallback, useState } from 'react';\nimport { checkCollision, StageType } from '../gameHelpers';\nimport { tetrisConfig } from '../Config/tetrisConfig';\nimport { randomTetromino, TETROMINOS, TetrominoShapeType } from '../Config/tetrominos';\n\nexport type PositionType = {\n    x: number;\n    y: number;\n};\n\nexport type PlayerStateType = {\n    pos: PositionType;\n    tetromino: TetrominoShapeType;\n    collided: boolean;\n};\n\nexport type PlayerPositionType = PositionType & { collided: boolean };\n\nconst playerStartingState: PlayerStateType = {\n    pos: {\n        x: 0,\n        y: 0,\n    },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n};\n\nexport const usePlayer = () => {\n    const [player, setPlayer] = useState(playerStartingState);\n    const [nextTetromino, setNextTetromino] = useState(randomTetromino());\n\n    const rotate = (matrix: TetrominoShapeType, direction: number) => {\n        const rotatedTetromino = matrix.map((_, index) => matrix.map(col => col[index]));\n\n        if (direction > 0) return rotatedTetromino.map(row => row.reverse());\n\n        return rotatedTetromino.reverse();\n    };\n\n    const playerRotate = (stage: StageType, direction: number) => {\n        const clonedPlayer = JSON.parse(JSON.stringify(player));\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, direction);\n\n        const pos = clonedPlayer.pos.x;\n        let offset = 1;\n        while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n            clonedPlayer.pos.x += offset;\n            offset = -(offset + (offset > 0 ? 1 : -1));\n            if (offset > clonedPlayer.tetromino[0].length) {\n                rotate(clonedPlayer.tetromino, -direction);\n                clonedPlayer.pos.x = pos;\n                return;\n            }\n        }\n        setPlayer(clonedPlayer);\n    };\n\n    const updatePlayerPosition = ({ x, y, collided }: PlayerPositionType) => {\n        setPlayer(prev => ({\n            ...prev,\n            pos: {\n                x: (prev.pos.x += x),\n                y: (prev.pos.y += y),\n            },\n            collided,\n        }));\n    };\n\n    const resetPlayer = useCallback(() => {\n        setPlayer({\n            pos: {\n                x: tetrisConfig.stage.width / 2 - 2,\n                y: 0,\n            },\n            tetromino: nextTetromino.shape,\n            collided: false,\n        });\n\n        setNextTetromino(randomTetromino());\n    }, [nextTetromino]);\n\n    return {\n        player,\n        updatePlayerPosition,\n        resetPlayer,\n        playerRotate,\n        nextTetromino,\n    } as const;\n};\n","import { useState, useEffect } from 'react';\nimport { createStage, StageType } from '../gameHelpers';\nimport { PlayerStateType } from './usePlayer';\n\nexport const useStage = (player: PlayerStateType, resetPlayer: any) => {\n    const [ stage, setStage ] = useState(createStage());\n    const [ rowsCleared, setRowsCleared ] = useState(0);\n    const [ activeColumns, setActiveColumns ] = useState({left: 0, size: 0});\n\n    useEffect(() => {\n        setRowsCleared(0);\n\n        const sweepRows = (newStage: StageType) => (\n            newStage.reduce((accumulator, row) => {\n                if (row.findIndex(cell => cell[0] === 0) === -1) {\n                    setRowsCleared(prev => prev + 1);\n                    accumulator.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n\n                    return accumulator;\n                }\n\n                accumulator.push(row);\n\n                return accumulator;\n            }, [])\n        )\n\n        const updateStage = (prevStage: StageType): StageType => {\n            const newStage = prevStage.map(row => {\n                return row.map(cell => { return cell[1] === 'clear' ? [0, 'clear'] : cell })\n            });\n\n            const offsetArray = player.tetromino.map((row) => {\n                const indexes = row.map((cell, index) => {\n                    return cell !== 0 ? index + 1 : 0;\n                }).filter(index => index > 0);\n\n                if (indexes.length > 0) {\n                    return [Math.min(...indexes), Math.max(...indexes)];\n                }\n                \n                return [];\n            }).filter(cells => cells.length > 0).flat();\n\n            setActiveColumns({\n                left: player.pos.x + (Math.min(...offsetArray) - 1),\n                size: Math.max(...offsetArray) - Math.min(...offsetArray) + 1,\n            });\n\n            // draw the current tetromino\n            player.tetromino.forEach((row, y: number) => {\n                row.forEach((value: number | string, x: number) => {\n                    if (value !== 0) {\n                        const newY = y + player.pos.y;\n                        const newX = x + player.pos.x;\n\n                        //console.log(`newX: ${newX}, width: ${player.tetromino[0].length}`);\n\n                        newStage[newY][newX] = [\n                            value,\n                            player.collided ? 'merged' : 'clear',\n                        ];\n                    }\n                });\n            });\n\n            // check collisions\n            if (player.collided) {\n                resetPlayer();\n\n                return sweepRows(newStage);\n            }\n\n            return newStage;\n        }\n\n        setStage(prevState => updateStage(prevState));\n\n    }, [player, resetPlayer]);\n\n    return [ stage, setStage, rowsCleared, activeColumns ] as const;\n};","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback: Function, delay?: number | null) => {\n    const savedCallback = useRef<Function>(() => {});\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    });\n\n    useEffect(() => {\n        if (delay !== null) {\n        const interval = setInterval(() => savedCallback.current(), delay || 0);\n            return () => clearInterval(interval);\n        }\n\n        return undefined;\n    }, [delay]);\n};\n\nexport default useInterval;\n","import styled from 'styled-components';\n\nconst Display = styled.div`\n    background: ${({ theme }) => theme.buttonsAndDisplays.background};\n    border: ${({ theme }) => theme.main.borderWidth} solid ${({ theme }) => theme.main.borderColor};\n    color: ${({ theme }) => theme.buttonsAndDisplays.color};\n    font-size: ${({ theme }) => theme.main.fontSize};\n    font-family: 'Press Start 2P', cursive;\n    border-radius: 8px;\n    line-height: 45px;\n    margin-top: 20px;\n    padding: 0 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-flow: column;\n`;\n\nexport default Display;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n    background: ${({ theme }) => theme.buttonsAndDisplays.background};\n    border: ${({ theme }) => theme.main.borderWidth} solid ${({ theme }) => theme.main.borderColor};\n    color: ${({ theme }) => theme.buttonsAndDisplays.color};\n    font-size: ${({ theme }) => theme.main.fontSize};\n    display: flex;\n    flex-grow: 1;\n    justify-content: center;\n    align-items: center;\n    outline: none;\n    padding: 0 20px;\n    border-radius: 8px;\n    line-height: 50px;\n    font-family: inherit;\n\n    .custom-fill {\n        fill: ${({ theme }) => theme.buttonsAndDisplays.color};\n    }\n\n    &:hover {\n        cursor: pointer;\n        box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n    }\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport type BoxType = {\n    direction?: 'column' | 'row';\n    grow?: number;\n    width?: string;\n    margin?: [number | string, number | string, number | string, number | string] | [number | string, number | string];\n    justifyContent?: 'space-between' | 'space-around' | 'flex-start' | 'flex-end' | 'center';\n    alignItems?: 'center' | 'stretch' | 'flex-start' | 'flex-end';\n};\n\nconst Box = styled.div<BoxType>`\n    width: ${({ width }) => (width ? width : 'row')};\n    margin: ${({ margin }) => (margin ? margin.join(' ') : '')};\n    display: flex;\n    flex-grow: ${({ grow }) => (grow ? grow : 0)};\n    flex-shrink: 0;\n    flex-direction: ${({ direction }) => (direction ? direction : 'row')};\n    justify-content: ${({ justifyContent }) => (justifyContent ? justifyContent : 'center')};\n    align-items: ${({ alignItems }) => (alignItems ? alignItems : 'stretch')}; ;\n`;\n\nexport default Box;\n","import styled from 'styled-components';\nimport { tetrisConfig } from '../Config/tetrisConfig';\nimport Display from './Display';\n\nexport const StyledModalContainer = styled.div`\n    background: ${({ theme }) => theme.modal.background};\n    color: ${({ theme }) => theme.modal.color};\n    padding: 30px;\n    border-radius: 8px;\n`;\n\nexport const StyledSettingsOverlay = styled.div`\n    color: ${({ theme }) => theme.main.color};\n    position: fixed;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    z-index: 99;\n    display: flex;\n    flex-flow: column wrap;\n    font-family: 'Press Start 2P', cursive;\n    background: ${({ theme }) => theme.modal.overlay}; ;\n`;\n\nexport const StyledDisplaysContainer = styled.div`\n    margin-right: 20px;\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: flex-start;\n    align-items: stretch;\n`;\n\nexport const StyledDisplays = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n`;\n\nexport const StyledControlsContainer = styled.div`\n    display: none;\n\n    @media (max-width: ${tetrisConfig.cell.size * tetrisConfig.stage.width + 300}px) {\n        display: flex;\n    }\n\n    position: fixed;\n    top: ${() => `${tetrisConfig.stage.height * tetrisConfig.cell.size - 50}px`};\n    height: 50px;\n    width: 100%;\n    z-index: 98;\n    justify-content: center;\n    align-items: stretch;\n`;\n\nexport const StyledControl = styled.button`\n    display: flex;\n    outline: none;\n    border: none;\n    padding: 0;\n    flex-grow: 1;\n    justify-content: center;\n    background: rgba(255, 255, 255, 0.5);\n    padding: 20px;\n`;\n\nexport const AppContainer = styled.div`\n    background: ${({ theme }) => theme.main.background};\n    width: 100%;\n    display: flex;\n    flex-grow: 1;\n    justify-content: center;\n    align-items: center;\n    flex-flow: row nowrap;\n`;\n\nexport const StyledTetrisContainer = styled.div<{ gameOver: boolean; tilt: number }>`\n    outline: none;\n    display: flex;\n    flex-grow: 1;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: flex-start;\n    transform-style: preserve-3d;\n    transform: rotateX(${({ tilt }) => `${tilt}deg`}) rotateY(0deg) translateZ(0px);\n    filter: ${({ gameOver }) => (gameOver ? 'blur(5px)' : 'none')};\n    font-family: 'Press Start 2P', cursive;\n\n    // desktop size\n    @media (min-width: ${tetrisConfig.cell.size * tetrisConfig.stage.width + 300}px) {\n        flex-flow: row nowrap;\n\n        ${StyledDisplaysContainer} {\n            width: 300px;\n        }\n    }\n\n    // mobile size\n    @media (max-width: ${tetrisConfig.cell.size * tetrisConfig.stage.width + 300}px) {\n        flex-flow: column nowrap;\n        justify-content: center;\n        align-items: center;\n        padding-top: 10px;\n\n        ${Display} {\n            font-size: 14px;\n            margin-top: 0;\n            padding: 8px;\n            line-height: 14px;\n            display: block;\n            border: 0;\n        }\n\n        ${StyledDisplaysContainer} {\n            margin: 0;\n            padding: 20px;\n            order: 2;\n\n            ${StyledDisplays} {\n                border: ${({ theme }) => theme.main.borderWidth} solid ${({ theme }) => theme.main.borderColor};\n                border-radius: 8px;\n                flex-flow: row wrap;\n                margin: 10px 0;\n                background: #fff;\n            }\n        }\n    }\n`;\n\nexport const StyledSlider = styled.input`\n    width: 100%;\n`;\n","import styled from 'styled-components';\n\nconst Textfield = styled.input`\n    background: ${({ theme }) => theme.buttonsAndDisplays.background};\n    border: ${({ theme }) => theme.main.borderWidth} solid ${({ theme }) => theme.main.borderColor};\n    color: ${({ theme }) => theme.buttonsAndDisplays.color};\n    font-size: ${({ theme }) => theme.main.fontSize};\n    display: flex;\n    flex-grow: 1;\n    justify-content: center;\n    align-items: center;\n    outline: none;\n    padding: 0 20px;\n    border-radius: 8px;\n    line-height: 50px;\n    font-family: inherit;\n\n    &:hover {\n        box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n    }\n`;\n\nexport default Textfield;\n","import { ChangeEvent, FC, useState } from 'react';\nimport styled from 'styled-components';\nimport Box from './Box';\nimport Button from './Button';\nimport { HighscoreType } from './Highscores';\nimport { StyledModalContainer } from './Styles';\nimport Textfield from './Textfield';\n\n// tSS = Text Shadow Size\nconst tSS = '1vw';\n\nconst StyledGameOver = styled.div`\n    position: fixed;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    z-index: 99;\n    color: #000;\n    display: flex;\n    flex-flow: column wrap;\n    font-family: 'Press Start 2P', cursive;\n    font-size: 20px;\n\n    p {\n        margin: 30px 0;\n        font-size: 60px;\n        font-size: 8vw;\n        text-shadow: ${tSS} ${tSS} 0 #fff, ${tSS} 0 0 #fff, 0 ${tSS} 0 #fff, -${tSS} ${tSS} 0 #fff, 00px 0 #fff,\n            0-${tSS} 0 #fff, ${tSS} -${tSS} 0 #fff, -${tSS} -${tSS} 0 #fff, 0 0 30px #000;\n    }\n\n    ${Button} {\n        flex-grow: 0;\n    }\n`;\n\ntype PropsType = {\n    score: number;\n    onClose(): void;\n    onSaveHighscore(highscore: HighscoreType): void;\n};\n\nconst GameOver: FC<PropsType> = props => {\n    const [username, setUsername] = useState('XXX');\n\n    return (\n        <StyledGameOver>\n            <p>Game Over</p>\n            <p>{props.score}</p>\n            <StyledModalContainer>\n                <Box margin={[0, 0, '30px', 0]} alignItems=\"center\">\n                    Your name:\n                    <Textfield\n                        value={username}\n                        onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                            setUsername(event.target.value.substring(0, 5).toUpperCase());\n                        }}\n                        style={{ width: '60px' }}\n                    />\n                </Box>\n                <Box>\n                    <Button\n                        onClick={() => {\n                            props.onSaveHighscore({\n                                name: username,\n                                score: props.score,\n                                date: Date.now().toString(),\n                            });\n                            props.onClose();\n                        }}\n                    >\n                        Save &amp; restart\n                    </Button>\n                </Box>\n            </StyledModalContainer>\n        </StyledGameOver>\n    );\n};\n\nexport default GameOver;\n","import React, { FC } from 'react';\nimport { StyledControl, StyledControlsContainer } from './Styles';\n\ntype PropsType = {\n    onPushLeft(): void;\n    onPushRight(): void;\n    onPushRotate(): void;\n    onPushDown(): void;\n};\n\nconst OnScreenControls: FC<PropsType> = props => (\n    <StyledControlsContainer>\n        <StyledControl\n            onClick={e => {\n                props.onPushLeft();\n                e.preventDefault();\n            }}\n        >\n            Left\n        </StyledControl>\n        <StyledControl\n            onClick={e => {\n                props.onPushRotate();\n                e.preventDefault();\n            }}\n        >\n            Rotate\n        </StyledControl>\n        <StyledControl\n            onClick={e => {\n                props.onPushDown();\n                e.preventDefault();\n            }}\n        >\n            Down\n        </StyledControl>\n        <StyledControl\n            onClick={e => {\n                props.onPushRight();\n                e.preventDefault();\n            }}\n        >\n            Right\n        </StyledControl>\n    </StyledControlsContainer>\n);\n\nexport default OnScreenControls;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nconst StyledFancyRadiosContainer = styled.div`\n    border: ${({ theme }) => theme.main.borderWidth} solid ${({ theme }) => theme.main.borderColor};\n    border-radius: 8px;\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: stretch;\n\n    input {\n        display: none;\n    }\n`;\n\nconst StyledLabel = styled.label<{ checked: boolean }>`\n    display: flex;\n    flex-grow: 1;\n    justify-content: center;\n    padding: 20px;\n    color: ${({ checked, theme }) => (checked ? '#F00' : theme.main.color)};\n`;\n\ntype PropsType = {\n    name: string;\n    options: Array<{\n        value: string;\n        label: string;\n    }>;\n    selected: string;\n    onChange(selectedValue: string): void;\n};\n\nconst FancyRadios: FC<PropsType> = props => (\n    <StyledFancyRadiosContainer>\n        {props.options.map(option => (\n            <StyledLabel checked={props.selected === option.value}>\n                <input\n                    type=\"radio\"\n                    name={props.name}\n                    value={option.value}\n                    checked={props.selected === option.value}\n                    onChange={({ target }) => {\n                        props.onChange(target.value);\n                    }}\n                />\n                {option.label}\n            </StyledLabel>\n        ))}\n    </StyledFancyRadiosContainer>\n);\n\nexport default FancyRadios;\n","import styled from 'styled-components';\n\nconst Label = styled.label<{ mt?: boolean }>`\n    display: flex;\n    outline: none;\n    line-height: 45px;\n    font-size: 20px;\n    margin-bottom: 12px;\n    margin-top: ${({ mt }) => (mt ? '30px' : '0')};\n    font-family: inherit;\n`;\n\nexport default Label;\n","import React, { FC } from 'react';\nimport Button from './Button';\nimport FancyRadios from './FancyRadios';\nimport Label from './Label';\nimport { StyledModalContainer, StyledSettingsOverlay, StyledSlider } from './Styles';\nimport { LocalSettingsType } from '../Tetris';\n\ntype PropsType = {\n    localSettings: LocalSettingsType;\n    onLocalSettingsChange(localSettings: LocalSettingsType): void;\n    onCloseSettings(): void;\n};\n\nconst Settings: FC<PropsType> = props => (\n    <StyledSettingsOverlay>\n        <StyledModalContainer>\n            <Label>Tilt:</Label>\n            <StyledSlider\n                type=\"range\"\n                name=\"volume\"\n                value={props.localSettings.tilt}\n                min=\"0\"\n                max=\"65\"\n                onChange={({ target }) => {\n                    props.onLocalSettingsChange({\n                        ...props.localSettings,\n                        tilt: parseInt(target.value),\n                    });\n                }}\n            />\n            <Label mt>Theme:</Label>\n            <FancyRadios\n                name=\"theme\"\n                options={[\n                    { value: 'light', label: 'Light' },\n                    { value: 'dark', label: 'Dark' },\n                ]}\n                selected={props.localSettings.theme}\n                onChange={selected => {\n                    props.onLocalSettingsChange({\n                        ...props.localSettings,\n                        theme: selected as LocalSettingsType['theme'],\n                    });\n                }}\n            />\n            <div style={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}>\n                <Button\n                    onClick={() => {\n                        props.onCloseSettings();\n                    }}\n                >\n                    Close\n                </Button>\n            </div>\n        </StyledModalContainer>\n    </StyledSettingsOverlay>\n);\n\nexport default Settings;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"custom-fill\",\n  d: \"M57,11h-9.5C45.9,5.7,40.3,2.8,35,4.5c-3.1,1-5.6,3.4-6.5,6.5H7c-1.7,0-3,1.3-3,3s1.3,3,3,3h21.5c1.7,5.3,7.3,8.2,12.5,6.5   c3.1-1,5.6-3.4,6.5-6.5H57c1.7,0,3-1.3,3-3S58.7,11,57,11z M38,18c-2.2,0-4-1.8-4-4s1.8-4,4-4s4,1.8,4,4S40.2,18,38,18z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"custom-fill\",\n  d: \"M57,29H26.5c-1.7-5.3-7.3-8.2-12.5-6.5c-3.1,1-5.6,3.4-6.5,6.5H7c-1.7,0-3,1.3-3,3c0,1.7,1.3,3,3,3h0.5   c1.7,5.3,7.3,8.2,12.5,6.5c3.1-1,5.6-3.4,6.5-6.5H57c1.7,0,3-1.3,3-3C60,30.3,58.7,29,57,29z M17,36c-2.2,0-4-1.8-4-4s1.8-4,4-4   s4,1.8,4,4S19.2,36,17,36z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"custom-fill\",\n  d: \"M57,47h-1.5c-1.7-5.3-7.3-8.2-12.5-6.5c-3.1,1-5.6,3.4-6.5,6.5H7c-1.7,0-3,1.3-3,3s1.3,3,3,3h29.5   c1.7,5.3,7.3,8.2,12.5,6.5c3.1-1,5.6-3.4,6.5-6.5H57c1.7,0,3-1.3,3-3S58.7,47,57,47z M46,54c-2.2,0-4-1.8-4-4s1.8-4,4-4s4,1.8,4,4   S48.2,54,46,54z\"\n}));\n\nfunction SvgSlider(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 64 64\",\n    style: {\n      enableBackground: \"new 0 0 64 64\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSlider);\nexport default __webpack_public_path__ + \"static/media/slider.9e01c979.svg\";\nexport { ForwardRef as ReactComponent };","import { ThemeType } from './ThemeTypes';\n\nexport const lightTheme: ThemeType = {\n    tetrominos: {\n        0: { color: '#000' },\n        I: { color: '#9cdaff' },\n        J: { color: '#c568a5' },\n        L: { color: '#ffd265' },\n        O: { color: '#bcff7c' },\n        S: { color: '#cd94ff' },\n        T: { color: '#8aedeb' },\n        Z: { color: '#dea6ec' },\n        '?': { color: '#ece7a6' },\n    },\n    main: {\n        background: 'linear-gradient(to top, #ffefba, #ffffff)',\n        color: '#000',\n        borderColor: '#000',\n        borderWidth: '1px',\n        fontSize: '20px',\n    },\n    modal: {\n        overlay: 'rgba(0, 0, 0, 0.6)',\n        background: '#FFF',\n        color: '#000',\n    },\n    stage: {\n        background: '#FFF',\n        lines: '#BBB',\n        guide: 'rgba(0,0,0,0.05)',\n    },\n    buttonsAndDisplays: {\n        background: '#FFF',\n        color: '#000',\n    },\n};\n","import { ThemeType } from './ThemeTypes';\n\nexport const darkTheme: ThemeType = {\n    tetrominos: {\n        0: { color: '#000' },\n        I: { color: '#9cdaff' },\n        J: { color: '#c568a5' },\n        L: { color: '#ffd265' },\n        O: { color: '#bcff7c' },\n        S: { color: '#cd94ff' },\n        T: { color: '#8aedeb' },\n        Z: { color: '#dea6ec' },\n        '?': { color: '#ece7a6' },\n    },\n    main: {\n        background: 'linear-gradient(to bottom, #0f2027, #203a43, #2c5364)',\n        color: '#FFF',\n        borderColor: '#FFF',\n        borderWidth: '1px',\n        fontSize: '20px',\n    },\n    modal: {\n        overlay: 'rgba(255, 255, 255, 0.6)',\n        background: '#000',\n        color: '#FFF',\n    },\n    stage: {\n        background: '#000',\n        lines: '#777',\n        guide: 'rgba(255,255,255,0.2)',\n    },\n    buttonsAndDisplays: {\n        background: '#0f2027',\n        color: '#FFF',\n    },\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { tetrisConfig } from '../Config/tetrisConfig';\nimport { TetrominoShapeType, TetrominoKeyType } from '../Config/tetrominos';\nimport Box from './Box';\nimport Cell from './Cell';\n\nconst StyledRow = styled.div`\n    display: flex;\n    height: ${tetrisConfig.cell.size}px;\n    width: 100%;\n`;\n\ntype PropsType = {\n    shape: TetrominoShapeType;\n};\n\nconst SingleTetromino: FC<PropsType> = props => {\n    return (\n        <Box direction=\"column\">\n            {props.shape.map((row: Array<string | number>, rowIndex: number) => (\n                <StyledRow key={rowIndex}>\n                    {row.map((type: string | number, cellIndex) => {\n                        return <Cell key={cellIndex} tetrominoType={type as TetrominoKeyType} />;\n                    })}\n                </StyledRow>\n            ))}\n        </Box>\n    );\n};\n\nexport default SingleTetromino;\n","import React, { FC } from 'react';\nimport Box from './Box';\n\nexport type HighscoreType = {\n    name: string;\n    score: number;\n    date: string;\n};\n\ntype PropsType = {\n    highscores: HighscoreType[];\n};\n\nconst emptyHighscoreEntry: HighscoreType = {\n    name: '-----',\n    score: 0,\n    date: '0',\n};\n\nconst SingleTetromino: FC<PropsType> = props => {\n    const highscores = props.highscores\n        .sort((a, b) => (a.score > b.score ? -1 : b.score > a.score ? 1 : 0))\n        .slice(0, 3);\n\n    // add three items, to make sure there's always three entries showing in the list\n    const populatedHighscores: HighscoreType[] = [\n        ...highscores,\n        emptyHighscoreEntry,\n        emptyHighscoreEntry,\n        emptyHighscoreEntry,\n    ];\n\n    return (\n        <Box direction=\"column\" grow={1} width=\"100%\">\n            {populatedHighscores.slice(0, 3).map((player: HighscoreType) => (\n                <Box grow={1} justifyContent=\"space-between\">\n                    <Box>{player.name.toUpperCase()}</Box>\n                    <Box>{player.score}</Box>\n                </Box>\n            ))}\n        </Box>\n    );\n};\n\nexport default SingleTetromino;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Stage from './Components/Stage';\nimport { usePlayer } from './Hooks/usePlayer';\nimport { useStage } from './Hooks/useStage';\nimport useInterval from './Hooks/useInterval';\nimport { createStage, checkCollision } from './gameHelpers';\nimport { useGameStatus } from './Hooks/useGameStatus';\nimport Display from './Components/Display';\nimport { tetrisConfig } from './Config/tetrisConfig';\nimport Button from './Components/Button';\nimport GameOver from './Components/GameOver';\nimport { StyledTetrisContainer, StyledDisplaysContainer, StyledDisplays, AppContainer } from './Components/Styles';\nimport OnScreenControls from './Components/OnScreenControls';\nimport Settings from './Components/Settings';\nimport Box from './Components/Box';\nimport { ThemeProvider } from 'styled-components';\nimport { ReactComponent as Slider } from './Assets/slider.svg';\nimport { lightTheme } from './Themes/LightTheme';\nimport { darkTheme } from './Themes/DarkTheme';\nimport SingleTetromino from './Components/SingleTetromino';\nimport { PauseTetromino as pauseTetrominoShape } from './Config/tetrominos';\nimport Highscores, { HighscoreType } from './Components/Highscores';\n\ntype PlayerMovementType = 'LEFT' | 'RIGHT' | 'ROTATE' | 'DOWN' | 'FULLDOWN' | 'TOGGLE_PAUSE' | 'UNPAUSE';\n\nexport type LocalSettingsType = {\n    tilt: number;\n    theme: 'light' | 'dark';\n};\n\nconst Tetris = () => {\n    const [localSettings, setLocalSettings] = useState<LocalSettingsType>({\n        tilt: 0,\n        theme: 'dark',\n    });\n    const [dropTime, setDropTime] = useState<null | number>(null);\n    const [showSettings, setShowSettings] = useState(false);\n    const [gameOver, setGameOver] = useState(false);\n    const [gamePaused, setGamePaused] = useState(false);\n    const [gameStarted, setGameStarted] = useState(false);\n    const { player, updatePlayerPosition, resetPlayer, playerRotate, nextTetromino } = usePlayer();\n    const [stage, setStage, rowsCleared, activeColumns] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n    const [highscores, setHighscores] = useState<HighscoreType[]>([]);\n    const gameRef = useRef<HTMLDivElement>(null);\n\n    const movePlayer = (dir: number) => {\n        playerMovement('UNPAUSE');\n        if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n            updatePlayerPosition({ x: dir, y: 0, collided: false });\n        }\n    };\n\n    const startGame = () => {\n        setStage(createStage());\n        setDropTime(1000);\n        resetPlayer();\n        setScore(0);\n        setLevel(0);\n        setRows(0);\n        setGameOver(false);\n        setGameStarted(true);\n    };\n\n    const moveTetrominoDown = (y: number) => {\n        // Increase level and speed when player has cleared 10 rows\n        if (rows > (level + 1) * 10) {\n            setLevel(prev => prev + 1);\n            setDropTime(1000 / (level + 1) + 200);\n        }\n\n        // Check how far we can move without colliding\n        let canMoveTo = 0;\n\n        for (let tryToMoveTo = 1; tryToMoveTo <= y; tryToMoveTo += 1) {\n            if (checkCollision(player, stage, { x: 0, y: tryToMoveTo })) {\n                break;\n            } else {\n                canMoveTo = tryToMoveTo;\n            }\n        }\n\n        // debug collision detection\n        //console.log(`want to move to: ${y}, canMove to ${canMoveTo}, player Y: ${player.pos.y}`);\n\n        if (canMoveTo === y) {\n            updatePlayerPosition({ x: 0, y: y, collided: false });\n        } else {\n            if (player.pos.y < 1 && canMoveTo < 1) {\n                setGameStarted(false);\n                setGameOver(true);\n                setDropTime(null);\n            }\n            updatePlayerPosition({ x: 0, y: canMoveTo, collided: true });\n        }\n    };\n\n    const keyUp = ({ keyCode }: { keyCode: number }) => {\n        if (!gameOver) {\n            if (keyCode === 40 || keyCode === 34 || keyCode === 35) {\n                playerMovement('UNPAUSE');\n            }\n        }\n    };\n\n    const playerMovement = (action: PlayerMovementType) => {\n        switch (action) {\n            case 'LEFT':\n                movePlayer(-1);\n                break;\n            case 'RIGHT':\n                movePlayer(1);\n                break;\n            case 'DOWN':\n                setDropTime(null);\n                moveTetrominoDown(1);\n                break;\n            case 'FULLDOWN':\n                setDropTime(null);\n                moveTetrominoDown(tetrisConfig.stage.height);\n                break;\n            case 'ROTATE':\n                playerRotate(stage, 1);\n                break;\n            case 'TOGGLE_PAUSE':\n                if (gamePaused) {\n                    setGamePaused(false);\n                    setDropTime(1000 / (level + 1));\n                } else {\n                    setGamePaused(true);\n                    setDropTime(null);\n                }\n                break;\n            case 'UNPAUSE':\n                setGamePaused(false);\n                setDropTime(1000 / (level + 1));\n                break;\n        }\n    };\n\n    const move = (event: React.KeyboardEvent<HTMLDivElement>) => {\n        let preventDefault = true;\n\n        if (!gameOver) {\n            switch (event.keyCode) {\n                case 37: // LEFT\n                    playerMovement('LEFT');\n                    break;\n                case 39: // RIGHT\n                    playerMovement('RIGHT');\n                    break;\n                case 40: // DOWN\n                    playerMovement('DOWN');\n                    break;\n                case 38: // UP\n                    playerMovement('ROTATE');\n                    break;\n                case 80: // P\n                    playerMovement('TOGGLE_PAUSE');\n                    break;\n                case 34: // Page Down\n                case 35: // End\n                    playerMovement('FULLDOWN');\n                    break;\n                default:\n                    console.log(`Unused keystroke: ${event.keyCode}`);\n                    preventDefault = false;\n                    break;\n            }\n        }\n\n        if (preventDefault) {\n            event.preventDefault();\n        }\n    };\n\n    useInterval(() => {\n        moveTetrominoDown(1);\n    }, dropTime);\n\n    useEffect(() => {\n        const localStorageSettings = localStorage.getItem('TetrisSettings');\n        const savedHighscores = localStorage.getItem('TetrisHighscores');\n\n        if (localStorageSettings) {\n            setLocalSettings(JSON.parse(localStorageSettings));\n        }\n\n        if (savedHighscores) {\n            setHighscores(JSON.parse(savedHighscores));\n        }\n    }, [setHighscores]);\n\n    return (\n        <ThemeProvider theme={localSettings.theme === 'light' ? lightTheme : darkTheme}>\n            <AppContainer>\n                {showSettings && (\n                    <Settings\n                        localSettings={localSettings}\n                        onLocalSettingsChange={settingsObject => {\n                            setLocalSettings(settingsObject);\n                            localStorage.setItem('TetrisSettings', JSON.stringify(settingsObject));\n                        }}\n                        onCloseSettings={() => {\n                            setShowSettings(false);\n                        }}\n                    />\n                )}\n                {gameOver && (\n                    <GameOver\n                        score={score}\n                        onClose={() => {\n                            startGame();\n                            gameRef?.current?.focus();\n                        }}\n                        onSaveHighscore={(highscore: HighscoreType) => {\n                            const newHighscores: HighscoreType[] = [...highscores, highscore];\n\n                            setHighscores(newHighscores);\n                            localStorage.setItem('TetrisHighscores', JSON.stringify(newHighscores));\n                        }}\n                    />\n                )}\n                <OnScreenControls\n                    onPushLeft={() => {\n                        playerMovement('LEFT');\n                    }}\n                    onPushRotate={() => {\n                        playerMovement('ROTATE');\n                    }}\n                    onPushRight={() => {\n                        playerMovement('RIGHT');\n                    }}\n                    onPushDown={() => {\n                        playerMovement('DOWN');\n                        playerMovement('UNPAUSE');\n                    }}\n                />\n                <StyledTetrisContainer\n                    ref={gameRef}\n                    tilt={localSettings.tilt}\n                    gameOver={gameOver}\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyUp={keyUp}\n                    onKeyDown={event => {\n                        move(event);\n                    }}\n                >\n                    <StyledDisplaysContainer>\n                        <Box>\n                            {!gameStarted ? (\n                                <Button\n                                    onClick={() => {\n                                        startGame();\n                                    }}\n                                >\n                                    Start\n                                </Button>\n                            ) : (\n                                <Button\n                                    onClick={() => {\n                                        playerMovement('TOGGLE_PAUSE');\n                                    }}\n                                >\n                                    {gamePaused ? 'Continue' : 'Pause'}\n                                </Button>\n                            )}\n                            <Button\n                                onClick={() => {\n                                    if (!gamePaused) {\n                                        playerMovement('TOGGLE_PAUSE');\n                                    }\n                                    setShowSettings(true);\n                                }}\n                                style={{ marginLeft: '10px' }}\n                            >\n                                <Slider style={{ height: '30px' }} />\n                            </Button>\n                        </Box>\n                        <StyledDisplays>\n                            <Display>Score: {score}</Display>\n                            <Display>Rows: {rows}</Display>\n                            <Display>Level: {level}</Display>\n                            <Display>\n                                <Box>Scores:</Box>\n                                <Highscores highscores={highscores} />\n                            </Display>\n                            <Display>\n                                <Box>Next:</Box>\n                                <SingleTetromino shape={gamePaused ? pauseTetrominoShape : nextTetromino.preview} />\n                            </Display>\n                        </StyledDisplays>\n                    </StyledDisplaysContainer>\n                    <Stage\n                        paused={gamePaused}\n                        stage={stage}\n                        showInstructions={!gameStarted}\n                        activeColumns={activeColumns}\n                    />\n                </StyledTetrisContainer>\n            </AppContainer>\n        </ThemeProvider>\n    );\n};\n\nexport default Tetris;\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = (rowsCleared: number) => {\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [level, setLevel] = useState(0);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n        if (rowsCleared > 0) {\n            // This is how original Tetris score is calculated\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n            setRows(prev => prev + rowsCleared);\n        }\n    }, [level, linePoints, rowsCleared]);\n\n    useEffect(() => {\n        calcScore();\n    }, [calcScore, rowsCleared, score]);\n\n    return [score, setScore, rows, setRows, level, setLevel] as const;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport type BackgroundGradientsType = {\n    [key: string]: string[];\n};\n\nexport const backgroundGradients: BackgroundGradientsType = {\n    royal: ['to bottom', '#141e30', '#243b55'],\n    greenToBlack: ['to bottom', '#001510', '#00bf8f'],\n    netflix: ['to bottom', '#8E0E00', '#1F1C18'],\n    megatron: ['to bottom', '#c6ffdd', '#fbd786', '#f7797d'],\n};\n\nexport const StyledSwatchContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-flow: row wrap;\n`;\n\nexport const StyledGradientSwatch = styled.div<{ gradient: string[] }>`\n    display: flex;\n    background: linear-gradient(${({ gradient }) => gradient.join(', ')});\n    height: 100px;\n    width: 46%;\n    margin-bottom: 20px;\n    cursor: pointer;\n    border: 1px solid #000;\n    border-radius: 4px;\n`;\n\nexport const StyledContainer = styled.div<{ selectedBackground: string }>`\n    display: flex;\n    background: linear-gradient(${({ selectedBackground }) => backgroundGradients[selectedBackground].join(', ')});\n    flex-direction: column;\n    flex-grow: 1;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    font-family: 'Asap', sans-serif;\n    color: #fff;\n    line-height: 1.5em;\n\n    > p {\n        max-width: 540px;\n        padding: 20px;\n    }\n\n    a {\n        color: inherit;\n\n        strong {\n            font-size: 130%;\n        }\n    }\n`;\n\nexport const StyledButton = styled.button<{ dark?: boolean }>`\n    display: flex;\n    outline: none;\n    border: none;\n    padding: 0;\n    justify-content: center;\n    padding: 12px;\n    border-radius: 4px;\n    cursor: pointer;\n\n    box-shadow: 0 0 0 1px #fff inset;\n    background: rgba(255, 255, 255, 0.1);\n    fill: #fff;\n    color: #fff;\n\n    ${({ dark }) =>\n        dark &&\n        `\n        box-shadow: 0 0 0 1px #000 inset;\n        background: rgba(0, 0, 0, 0.1);\n        fill: #000;\n        color: #000;\n    `}\n`;\n\nexport const StyledNav = styled.nav`\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n    align-items: stretch;\n    max-width: 100%;\n    width: 580px;\n    box-sizing: content-box;\n\n    a {\n        box-sizing: border-box;\n        color: inherit;\n        display: flex;\n        flex-grow: 1;\n        flex-flow: column;\n        box-shadow: 0 0 0 1px #fff inset;\n        width: calc(50% - 40px);\n        min-width: 180px;\n        margin: 20px;\n        padding: 20px;\n        text-decoration: none;\n        border-radius: 4px;\n        background: rgba(255, 255, 255, 0.1);\n\n        &:hover {\n            background: rgba(255, 255, 255, 0.15);\n        }\n    }\n\n    p {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledLink = styled(Link)<{ disabled?: boolean }>`\n    opacity: ${({ disabled }) => (disabled ? '.3' : '1')};\n`;\n\nexport const StyledModalContainer = styled.div`\n    background: #fff;\n    color: #000;\n    padding: 30px;\n    border-radius: 4px;\n    width: 300px;\n    max-width: 100%;\n    border: 1px solid #000;\n`;\n\nexport const StyledSettingsOverlay = styled.div`\n    color: #000;\n    position: fixed;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    z-index: 99;\n    display: flex;\n    flex-flow: column wrap;\n    font-family: 'Press Start 2P', cursive;\n    background: rgba(0, 0, 0, 0.6);\n`;\n","import { StyledLink, StyledNav } from './styles';\n\nconst Navigation = () => (\n    <StyledNav>\n        <StyledLink to=\"/tetris\">\n            <strong>Tetris</strong>\n            <p>\n                This project uses: React, Custom hooks, Typescript, Styled Components, 3D CSS, Theming &amp;\n                LocalStorage\n            </p>\n        </StyledLink>\n        <StyledLink to=\"/\" disabled>\n            <strong>Breakout (soon...)</strong>\n            <p>This project uses: React, Custom hooks, RequestAnimationFrame, Theming, Styled Components, etc.</p>\n        </StyledLink>\n    </StyledNav>\n);\n\nexport default Navigation;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"custom-fill\",\n  d: \"M57,11h-9.5C45.9,5.7,40.3,2.8,35,4.5c-3.1,1-5.6,3.4-6.5,6.5H7c-1.7,0-3,1.3-3,3s1.3,3,3,3h21.5c1.7,5.3,7.3,8.2,12.5,6.5   c3.1-1,5.6-3.4,6.5-6.5H57c1.7,0,3-1.3,3-3S58.7,11,57,11z M38,18c-2.2,0-4-1.8-4-4s1.8-4,4-4s4,1.8,4,4S40.2,18,38,18z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"custom-fill\",\n  d: \"M57,29H26.5c-1.7-5.3-7.3-8.2-12.5-6.5c-3.1,1-5.6,3.4-6.5,6.5H7c-1.7,0-3,1.3-3,3c0,1.7,1.3,3,3,3h0.5   c1.7,5.3,7.3,8.2,12.5,6.5c3.1-1,5.6-3.4,6.5-6.5H57c1.7,0,3-1.3,3-3C60,30.3,58.7,29,57,29z M17,36c-2.2,0-4-1.8-4-4s1.8-4,4-4   s4,1.8,4,4S19.2,36,17,36z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"custom-fill\",\n  d: \"M57,47h-1.5c-1.7-5.3-7.3-8.2-12.5-6.5c-3.1,1-5.6,3.4-6.5,6.5H7c-1.7,0-3,1.3-3,3s1.3,3,3,3h29.5   c1.7,5.3,7.3,8.2,12.5,6.5c3.1-1,5.6-3.4,6.5-6.5H57c1.7,0,3-1.3,3-3S58.7,47,57,47z M46,54c-2.2,0-4-1.8-4-4s1.8-4,4-4s4,1.8,4,4   S48.2,54,46,54z\"\n}));\n\nfunction SvgSlider(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 64 64\",\n    style: {\n      enableBackground: \"new 0 0 64 64\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSlider);\nexport default __webpack_public_path__ + \"static/media/slider.9e01c979.svg\";\nexport { ForwardRef as ReactComponent };","import { FC } from 'react';\nimport { LocalSettingsType } from './Home';\nimport {\n    backgroundGradients,\n    StyledButton,\n    StyledGradientSwatch,\n    StyledModalContainer,\n    StyledSettingsOverlay,\n    StyledSwatchContainer,\n} from './styles';\n\ntype PropsType = {\n    localSettings: LocalSettingsType;\n    onLocalSettingsChange(localSettings: LocalSettingsType): void;\n    onCloseSettings(): void;\n};\n\nconst Settings: FC<PropsType> = props => (\n    <StyledSettingsOverlay>\n        <StyledModalContainer>\n            <StyledSwatchContainer>\n                {Object.entries(backgroundGradients).map(([key, gradient]) => (\n                    <StyledGradientSwatch\n                        key={key}\n                        gradient={gradient}\n                        onClick={() => {\n                            props.onLocalSettingsChange({\n                                ...props.localSettings,\n                                selectedBackgroundGradient: key,\n                            });\n                        }}\n                    />\n                ))}\n            </StyledSwatchContainer>\n            <div style={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}>\n                <StyledButton\n                    dark\n                    onClick={() => {\n                        props.onCloseSettings();\n                    }}\n                >\n                    Close\n                </StyledButton>\n            </div>\n        </StyledModalContainer>\n    </StyledSettingsOverlay>\n);\n\nexport default Settings;\n","import { useEffect, useState } from 'react';\nimport Navigation from './Navigation';\nimport { StyledButton, StyledContainer } from './styles';\nimport { ReactComponent as Slider } from './Assets/slider.svg';\nimport Settings from './Settings';\n\nexport type LocalSettingsType = {\n    selectedBackgroundGradient: string;\n};\n\nconst Home = () => {\n    const [showSettings, setShowSettings] = useState(false);\n    const [localSettings, setLocalSettings] = useState<LocalSettingsType>({\n        selectedBackgroundGradient: 'royal',\n    });\n\n    useEffect(() => {\n        const localStorageSettings = localStorage.getItem('HomepageSettings');\n\n        if (localStorageSettings) {\n            setLocalSettings(JSON.parse(localStorageSettings));\n        }\n    }, []);\n\n    return (\n        <StyledContainer selectedBackground={localSettings.selectedBackgroundGradient}>\n            {showSettings && (\n                <Settings\n                    localSettings={localSettings}\n                    onLocalSettingsChange={settingsObject => {\n                        setLocalSettings(settingsObject);\n                        console.log(settingsObject);\n                        localStorage.setItem('HomepageSettings', JSON.stringify(settingsObject));\n                    }}\n                    onCloseSettings={() => {\n                        setShowSettings(false);\n                    }}\n                />\n            )}\n            <h1>Hello World!</h1>\n            <p>\n                This is my personal website and playground. I am Johan van Tongeren, living in The Netherlands and\n                working as a frontend developer and (UX) designer for{' '}\n                <a href=\"https://www.linkedin.com/in/johan-van-tongeren-a963b316b\">\n                    {new Date().getFullYear() - 2004} years\n                </a>\n                . I also <a href=\"https://www.instagram.com/bad_decision_works\">love making stuff</a>. This evolved in{' '}\n                <a href=\"https://www.baddecision.works\">a webshop</a> for custom Volvo parts in 2019.\n            </p>\n            <StyledButton\n                onClick={() => {\n                    setShowSettings(true);\n                }}\n                style={{\n                    position: 'fixed',\n                    bottom: '20px',\n                    right: '20px',\n                }}\n            >\n                <Slider style={{ height: '20px' }} />\n            </StyledButton>\n            <Navigation />\n        </StyledContainer>\n    );\n};\n\nexport default Home;\n","import { FC } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Tetris from '../Tetris/Tetris';\nimport Home from './Home';\n\nconst Homepage: FC = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/breakout\">{/* <Breakout /> */}</Route>\n                <Route path=\"/tetris\">\n                    <Tetris />\n                </Route>\n                <Route path=\"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default Homepage;\n","import ReactDOM from 'react-dom';\nimport Homepage from './Homepage/Homepage';\n\nReactDOM.render(<Homepage />, document.getElementById('app'));\n"],"sourceRoot":""}